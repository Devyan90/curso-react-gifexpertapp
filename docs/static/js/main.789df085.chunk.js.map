{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAGXC,mBAAS,IAHE,mBAGxCC,EAHwC,KAG5BC,EAH4B,KAmB/C,OACI,0BAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAECJ,IACCF,GAAe,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACvCJ,EAAc,OAMd,2BACQK,KAAK,OACLC,MAAQP,EACRQ,SAlBU,SAAEL,GACxBF,EAAeE,EAAEM,OAAOF,Y,uBCVnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,mGAEsFC,UAAUH,IAFhG,SAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,MCHtBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAbAC,qBAAW,WACPxB,EAASC,GAAWwB,MAAK,SAAAC,GACrBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAMGqB,EDjB0BK,CAAc1B,GAAlCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAGrB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAGhDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAGf,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAiB,IAAMjB,EAAIC,IACLD,UEnBhBkB,EAAe,WAAM,MAIMxC,mBAAS,CAAC,eAJhB,mBAIvByC,EAJuB,KAIX1C,EAJW,KAM9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ0C,EAAWpB,KAAI,SAACT,GAEhB,OAAO,kBAAC,EAAD,CACH2B,IAAM3B,EACNA,SAAWA,UCjBnC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.789df085.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories }) => {\n\n\n    const [inputValue, setInputValue] = useState('');\n\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value);\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n\n        if(inputValue){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }        \n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                    type=\"text\"\n                    value={ inputValue }\n                    onChange={ handleInputChange }\n                />\n        </form>  \n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=NU60vxaYRKbG4z4X9qFPsZE61Lk1tmTM&limit=10&q=${ encodeURI(category) }`;\n    const respuesta = await fetch(url);\n    const {data} = await respuesta.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n\n        }\n    })\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n\n    const { data:images, loading } = useFetchGifs( category );\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            {\n                loading && <p className=\"animate__animated animate__flash\">Loading</p>\n            }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem\n                        key={ img.id } \n                        { ...img }/>\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    // Los useEffect NO PUEDEN SER async\n    useEffect( () => {\n        getGifs( category ).then(imgs => {\n            setState({\n                data: imgs,\n                loading: false\n            })\n        });\n    }, [category]);\n    // Arreglo de dependecias\n    // Si se envía arreglo vacio, la instruccion anterior, sólo se ejecuta una vez\n    // Lo que se ponga adentro, es lo que considerará cuando cambie, volvieron a reproducir el useEffect\n\n\n    return state; \n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball', 'Pokémon'];\n\n    const [categories, setCategories] = useState(['Pokémon']);\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n\n            <ol>\n                { \n                    categories.map((category) => {\n                    //return <li key={ category }> {category} </li>\n                    return <GifGrid \n                        key={ category }\n                        category={ category } \n                        />\n                    })\n                }\n            </ol>\n\n\n\n        </div>\n    )\n}\n\n\n// snippet rafc","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}